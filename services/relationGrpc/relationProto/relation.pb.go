// Code generated by protoc-gen-go. DO NOT EDIT.
// source: relation.proto

package relationProto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FollowInfo struct {
	Id                   int32                `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Uid                  int64                `protobuf:"varint,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
	FollowUid            int64                `protobuf:"varint,3,opt,name=FollowUid,proto3" json:"FollowUid,omitempty"`
	Status               int32                `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	IsFriend             int32                `protobuf:"varint,5,opt,name=IsFriend,proto3" json:"IsFriend,omitempty"`
	GroupId              int64                `protobuf:"varint,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,8,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FollowInfo) Reset()         { *m = FollowInfo{} }
func (m *FollowInfo) String() string { return proto.CompactTextString(m) }
func (*FollowInfo) ProtoMessage()    {}
func (*FollowInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8ceb4d3910fa25, []int{0}
}

func (m *FollowInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowInfo.Unmarshal(m, b)
}
func (m *FollowInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowInfo.Marshal(b, m, deterministic)
}
func (m *FollowInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowInfo.Merge(m, src)
}
func (m *FollowInfo) XXX_Size() int {
	return xxx_messageInfo_FollowInfo.Size(m)
}
func (m *FollowInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FollowInfo proto.InternalMessageInfo

func (m *FollowInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FollowInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FollowInfo) GetFollowUid() int64 {
	if m != nil {
		return m.FollowUid
	}
	return 0
}

func (m *FollowInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *FollowInfo) GetIsFriend() int32 {
	if m != nil {
		return m.IsFriend
	}
	return 0
}

func (m *FollowInfo) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *FollowInfo) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *FollowInfo) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type FanInfo struct {
	Id                   int32                `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Uid                  int64                `protobuf:"varint,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
	FanUid               int64                `protobuf:"varint,3,opt,name=FanUid,proto3" json:"FanUid,omitempty"`
	Status               int32                `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	IsFriend             int32                `protobuf:"varint,5,opt,name=IsFriend,proto3" json:"IsFriend,omitempty"`
	GroupId              int64                `protobuf:"varint,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,8,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FanInfo) Reset()         { *m = FanInfo{} }
func (m *FanInfo) String() string { return proto.CompactTextString(m) }
func (*FanInfo) ProtoMessage()    {}
func (*FanInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8ceb4d3910fa25, []int{1}
}

func (m *FanInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FanInfo.Unmarshal(m, b)
}
func (m *FanInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FanInfo.Marshal(b, m, deterministic)
}
func (m *FanInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FanInfo.Merge(m, src)
}
func (m *FanInfo) XXX_Size() int {
	return xxx_messageInfo_FanInfo.Size(m)
}
func (m *FanInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FanInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FanInfo proto.InternalMessageInfo

func (m *FanInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FanInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FanInfo) GetFanUid() int64 {
	if m != nil {
		return m.FanUid
	}
	return 0
}

func (m *FanInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *FanInfo) GetIsFriend() int32 {
	if m != nil {
		return m.IsFriend
	}
	return 0
}

func (m *FanInfo) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *FanInfo) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *FanInfo) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type FollowGroup struct {
	Id                   int64                `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Uid                  int64                `protobuf:"varint,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
	GroupName            string               `protobuf:"bytes,3,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	Status               int32                `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FollowGroup) Reset()         { *m = FollowGroup{} }
func (m *FollowGroup) String() string { return proto.CompactTextString(m) }
func (*FollowGroup) ProtoMessage()    {}
func (*FollowGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8ceb4d3910fa25, []int{2}
}

func (m *FollowGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowGroup.Unmarshal(m, b)
}
func (m *FollowGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowGroup.Marshal(b, m, deterministic)
}
func (m *FollowGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowGroup.Merge(m, src)
}
func (m *FollowGroup) XXX_Size() int {
	return xxx_messageInfo_FollowGroup.Size(m)
}
func (m *FollowGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowGroup.DiscardUnknown(m)
}

var xxx_messageInfo_FollowGroup proto.InternalMessageInfo

func (m *FollowGroup) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FollowGroup) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FollowGroup) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *FollowGroup) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *FollowGroup) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *FollowGroup) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type MultiFollows struct {
	Follows              []*FollowInfo `protobuf:"bytes,1,rep,name=Follows,proto3" json:"Follows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MultiFollows) Reset()         { *m = MultiFollows{} }
func (m *MultiFollows) String() string { return proto.CompactTextString(m) }
func (*MultiFollows) ProtoMessage()    {}
func (*MultiFollows) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8ceb4d3910fa25, []int{3}
}

func (m *MultiFollows) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiFollows.Unmarshal(m, b)
}
func (m *MultiFollows) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiFollows.Marshal(b, m, deterministic)
}
func (m *MultiFollows) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiFollows.Merge(m, src)
}
func (m *MultiFollows) XXX_Size() int {
	return xxx_messageInfo_MultiFollows.Size(m)
}
func (m *MultiFollows) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiFollows.DiscardUnknown(m)
}

var xxx_messageInfo_MultiFollows proto.InternalMessageInfo

func (m *MultiFollows) GetFollows() []*FollowInfo {
	if m != nil {
		return m.Follows
	}
	return nil
}

type MultiFans struct {
	Fans                 []*FanInfo `protobuf:"bytes,1,rep,name=Fans,proto3" json:"Fans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MultiFans) Reset()         { *m = MultiFans{} }
func (m *MultiFans) String() string { return proto.CompactTextString(m) }
func (*MultiFans) ProtoMessage()    {}
func (*MultiFans) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8ceb4d3910fa25, []int{4}
}

func (m *MultiFans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiFans.Unmarshal(m, b)
}
func (m *MultiFans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiFans.Marshal(b, m, deterministic)
}
func (m *MultiFans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiFans.Merge(m, src)
}
func (m *MultiFans) XXX_Size() int {
	return xxx_messageInfo_MultiFans.Size(m)
}
func (m *MultiFans) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiFans.DiscardUnknown(m)
}

var xxx_messageInfo_MultiFans proto.InternalMessageInfo

func (m *MultiFans) GetFans() []*FanInfo {
	if m != nil {
		return m.Fans
	}
	return nil
}

type MultiFollowGroups struct {
	Groups               []*FollowGroup `protobuf:"bytes,1,rep,name=Groups,proto3" json:"Groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MultiFollowGroups) Reset()         { *m = MultiFollowGroups{} }
func (m *MultiFollowGroups) String() string { return proto.CompactTextString(m) }
func (*MultiFollowGroups) ProtoMessage()    {}
func (*MultiFollowGroups) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8ceb4d3910fa25, []int{5}
}

func (m *MultiFollowGroups) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiFollowGroups.Unmarshal(m, b)
}
func (m *MultiFollowGroups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiFollowGroups.Marshal(b, m, deterministic)
}
func (m *MultiFollowGroups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiFollowGroups.Merge(m, src)
}
func (m *MultiFollowGroups) XXX_Size() int {
	return xxx_messageInfo_MultiFollowGroups.Size(m)
}
func (m *MultiFollowGroups) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiFollowGroups.DiscardUnknown(m)
}

var xxx_messageInfo_MultiFollowGroups proto.InternalMessageInfo

func (m *MultiFollowGroups) GetGroups() []*FollowGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

type UidReq struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Page                 int32    `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize             int32    `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UidReq) Reset()         { *m = UidReq{} }
func (m *UidReq) String() string { return proto.CompactTextString(m) }
func (*UidReq) ProtoMessage()    {}
func (*UidReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8ceb4d3910fa25, []int{6}
}

func (m *UidReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UidReq.Unmarshal(m, b)
}
func (m *UidReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UidReq.Marshal(b, m, deterministic)
}
func (m *UidReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UidReq.Merge(m, src)
}
func (m *UidReq) XXX_Size() int {
	return xxx_messageInfo_UidReq.Size(m)
}
func (m *UidReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UidReq.DiscardUnknown(m)
}

var xxx_messageInfo_UidReq proto.InternalMessageInfo

func (m *UidReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UidReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UidReq) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func init() {
	proto.RegisterType((*FollowInfo)(nil), "relationProto.FollowInfo")
	proto.RegisterType((*FanInfo)(nil), "relationProto.FanInfo")
	proto.RegisterType((*FollowGroup)(nil), "relationProto.FollowGroup")
	proto.RegisterType((*MultiFollows)(nil), "relationProto.MultiFollows")
	proto.RegisterType((*MultiFans)(nil), "relationProto.MultiFans")
	proto.RegisterType((*MultiFollowGroups)(nil), "relationProto.MultiFollowGroups")
	proto.RegisterType((*UidReq)(nil), "relationProto.UidReq")
}

func init() { proto.RegisterFile("relation.proto", fileDescriptor_fc8ceb4d3910fa25) }

var fileDescriptor_fc8ceb4d3910fa25 = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x53, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0xae, 0x93, 0x26, 0x6d, 0xa7, 0x4b, 0x01, 0x4b, 0x54, 0x26, 0x20, 0x11, 0xe5, 0x54, 0x71,
	0xc8, 0x4a, 0xdd, 0x03, 0x12, 0x37, 0x58, 0xa9, 0x51, 0x40, 0xa0, 0x95, 0x77, 0xfb, 0x00, 0x5e,
	0xc5, 0x5b, 0x59, 0x4a, 0xe3, 0x92, 0xb8, 0x42, 0xf0, 0x06, 0x5c, 0x79, 0x3f, 0x4e, 0xbc, 0x08,
	0xf2, 0x4f, 0x36, 0xdd, 0x6a, 0x5b, 0x40, 0xdc, 0x38, 0xc5, 0x33, 0xf9, 0xe6, 0xf3, 0x7c, 0xdf,
	0x8c, 0x61, 0x52, 0xf3, 0x92, 0x29, 0x21, 0xab, 0x74, 0x53, 0x4b, 0x25, 0xf1, 0x83, 0x36, 0xbe,
	0xd0, 0x61, 0xf4, 0x62, 0x25, 0xe5, 0xaa, 0xe4, 0xa7, 0xe6, 0xe7, 0xf5, 0xf6, 0xe6, 0x54, 0x89,
	0x35, 0x6f, 0x14, 0x5b, 0x6f, 0x2c, 0x3e, 0xf9, 0xee, 0x01, 0x2c, 0x64, 0x59, 0xca, 0xcf, 0x79,
	0x75, 0x23, 0xf1, 0x04, 0xbc, 0xbc, 0x20, 0x28, 0x46, 0xb3, 0x80, 0x7a, 0x79, 0x81, 0x1f, 0x81,
	0xbf, 0x14, 0x05, 0xf1, 0x62, 0x34, 0xf3, 0xa9, 0x3e, 0xe2, 0xe7, 0x30, 0xb2, 0x78, 0x9d, 0xf7,
	0x4d, 0xbe, 0x4b, 0xe0, 0x29, 0x84, 0x97, 0x8a, 0xa9, 0x6d, 0x43, 0xfa, 0x86, 0xc3, 0x45, 0x38,
	0x82, 0x61, 0xde, 0x2c, 0x6a, 0xc1, 0xab, 0x82, 0x04, 0xe6, 0xcf, 0x6d, 0x8c, 0x09, 0x0c, 0xb2,
	0x5a, 0x6e, 0x37, 0x79, 0x41, 0x42, 0xc3, 0xd7, 0x86, 0xf8, 0x35, 0xc0, 0x79, 0xcd, 0x99, 0xe2,
	0x57, 0x62, 0xcd, 0xc9, 0x20, 0x46, 0xb3, 0xf1, 0x3c, 0x4a, 0xad, 0xa4, 0xb4, 0x95, 0x94, 0x5e,
	0xb5, 0x92, 0xe8, 0x0e, 0x5a, 0xd7, 0x2e, 0x37, 0x45, 0x5b, 0x3b, 0xfc, 0x7d, 0x6d, 0x87, 0x4e,
	0xbe, 0x79, 0x30, 0x58, 0xb0, 0xea, 0x0f, 0x1d, 0x99, 0x42, 0xb8, 0x60, 0x55, 0x67, 0x87, 0x8b,
	0xfe, 0x13, 0x2f, 0x7e, 0x20, 0x18, 0xdb, 0xf9, 0x9a, 0x4e, 0x76, 0xfc, 0xf0, 0x0f, 0x6f, 0x88,
	0x81, 0x7e, 0x64, 0x6b, 0x6e, 0x2c, 0x19, 0xd1, 0x2e, 0x71, 0xd0, 0x95, 0xbb, 0xfa, 0x82, 0x7f,
	0xd0, 0x17, 0xfe, 0x95, 0xbe, 0x73, 0x38, 0xf9, 0xb0, 0x2d, 0x95, 0xb0, 0x1a, 0x1b, 0x7c, 0x06,
	0x03, 0x77, 0x24, 0x28, 0xf6, 0x67, 0xe3, 0xf9, 0xd3, 0xf4, 0xce, 0x93, 0x4a, 0xbb, 0xd7, 0x42,
	0x5b, 0x64, 0xf2, 0x0a, 0x46, 0x96, 0x84, 0x55, 0x0d, 0x7e, 0x09, 0x7d, 0xfd, 0x75, 0xe5, 0xd3,
	0xfd, 0x72, 0xbb, 0x57, 0xd4, 0x60, 0x92, 0x0c, 0x1e, 0xef, 0xdc, 0x6e, 0x5c, 0x6a, 0xf0, 0x1c,
	0x42, 0x7b, 0x72, 0x14, 0xd1, 0xbd, 0x1d, 0x18, 0x08, 0x75, 0xc8, 0xe4, 0x1d, 0x84, 0x4b, 0x51,
	0x50, 0xfe, 0xa9, 0x1d, 0x08, 0xea, 0x06, 0x82, 0xa1, 0x7f, 0xc1, 0x56, 0xdc, 0xcc, 0x28, 0xa0,
	0xe6, 0xac, 0x97, 0x50, 0x7f, 0x2f, 0xc5, 0x57, 0x3b, 0xa3, 0x80, 0xde, 0xc6, 0xf3, 0x9f, 0x08,
	0x86, 0xd4, 0xdd, 0x88, 0x33, 0x78, 0x98, 0x71, 0xe5, 0x84, 0xbe, 0xfd, 0xa2, 0xf9, 0x9e, 0xec,
	0xf5, 0x63, 0x2f, 0x8e, 0x9e, 0xed, 0xa5, 0x77, 0x6d, 0x4d, 0x7a, 0xf8, 0x0d, 0x9c, 0x68, 0x22,
	0x56, 0x1d, 0x67, 0x21, 0xf7, 0xb2, 0x68, 0xaf, 0x7a, 0xf8, 0x3d, 0x4c, 0x32, 0xae, 0xac, 0xe2,
	0xa3, 0x24, 0xf1, 0xe1, 0x56, 0x9c, 0x5f, 0xbd, 0xeb, 0xd0, 0x2c, 0xc6, 0xd9, 0xaf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xcd, 0x69, 0x40, 0xdc, 0x42, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RelationClient is the client API for Relation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RelationClient interface {
	GetFollowsByUid(ctx context.Context, in *UidReq, opts ...grpc.CallOption) (*MultiFollows, error)
	GetFansByUid(ctx context.Context, in *UidReq, opts ...grpc.CallOption) (*MultiFans, error)
	GetGroupsByUid(ctx context.Context, in *UidReq, opts ...grpc.CallOption) (*MultiFollowGroups, error)
}

type relationClient struct {
	cc *grpc.ClientConn
}

func NewRelationClient(cc *grpc.ClientConn) RelationClient {
	return &relationClient{cc}
}

func (c *relationClient) GetFollowsByUid(ctx context.Context, in *UidReq, opts ...grpc.CallOption) (*MultiFollows, error) {
	out := new(MultiFollows)
	err := c.cc.Invoke(ctx, "/relationProto.Relation/GetFollowsByUid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationClient) GetFansByUid(ctx context.Context, in *UidReq, opts ...grpc.CallOption) (*MultiFans, error) {
	out := new(MultiFans)
	err := c.cc.Invoke(ctx, "/relationProto.Relation/GetFansByUid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationClient) GetGroupsByUid(ctx context.Context, in *UidReq, opts ...grpc.CallOption) (*MultiFollowGroups, error) {
	out := new(MultiFollowGroups)
	err := c.cc.Invoke(ctx, "/relationProto.Relation/GetGroupsByUid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RelationServer is the server API for Relation service.
type RelationServer interface {
	GetFollowsByUid(context.Context, *UidReq) (*MultiFollows, error)
	GetFansByUid(context.Context, *UidReq) (*MultiFans, error)
	GetGroupsByUid(context.Context, *UidReq) (*MultiFollowGroups, error)
}

func RegisterRelationServer(s *grpc.Server, srv RelationServer) {
	s.RegisterService(&_Relation_serviceDesc, srv)
}

func _Relation_GetFollowsByUid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServer).GetFollowsByUid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/relationProto.Relation/GetFollowsByUid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServer).GetFollowsByUid(ctx, req.(*UidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Relation_GetFansByUid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServer).GetFansByUid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/relationProto.Relation/GetFansByUid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServer).GetFansByUid(ctx, req.(*UidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Relation_GetGroupsByUid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServer).GetGroupsByUid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/relationProto.Relation/GetGroupsByUid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServer).GetGroupsByUid(ctx, req.(*UidReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Relation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "relationProto.Relation",
	HandlerType: (*RelationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFollowsByUid",
			Handler:    _Relation_GetFollowsByUid_Handler,
		},
		{
			MethodName: "GetFansByUid",
			Handler:    _Relation_GetFansByUid_Handler,
		},
		{
			MethodName: "GetGroupsByUid",
			Handler:    _Relation_GetGroupsByUid_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "relation.proto",
}
