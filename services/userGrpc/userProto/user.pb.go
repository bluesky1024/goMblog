// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package userProtobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   int64                `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Uid                  int64                `protobuf:"varint,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
	NickName             string               `protobuf:"bytes,3,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Password             string               `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	Telephone            string               `protobuf:"bytes,5,opt,name=Telephone,proto3" json:"Telephone,omitempty"`
	Email                string               `protobuf:"bytes,6,opt,name=Email,proto3" json:"Email,omitempty"`
	ProfileImages        string               `protobuf:"bytes,7,opt,name=ProfileImages,proto3" json:"ProfileImages,omitempty"`
	FollowsCount         int64                `protobuf:"varint,8,opt,name=FollowsCount,proto3" json:"FollowsCount,omitempty"`
	FriendsCount         int64                `protobuf:"varint,9,opt,name=FriendsCount,proto3" json:"FriendsCount,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,10,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *User) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetTelephone() string {
	if m != nil {
		return m.Telephone
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetProfileImages() string {
	if m != nil {
		return m.ProfileImages
	}
	return ""
}

func (m *User) GetFollowsCount() int64 {
	if m != nil {
		return m.FollowsCount
	}
	return 0
}

func (m *User) GetFriendsCount() int64 {
	if m != nil {
		return m.FriendsCount
	}
	return 0
}

func (m *User) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *User) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type MultiUsers struct {
	UserInfo             []*User  `protobuf:"bytes,1,rep,name=UserInfo,proto3" json:"UserInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiUsers) Reset()         { *m = MultiUsers{} }
func (m *MultiUsers) String() string { return proto.CompactTextString(m) }
func (*MultiUsers) ProtoMessage()    {}
func (*MultiUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *MultiUsers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiUsers.Unmarshal(m, b)
}
func (m *MultiUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiUsers.Marshal(b, m, deterministic)
}
func (m *MultiUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiUsers.Merge(m, src)
}
func (m *MultiUsers) XXX_Size() int {
	return xxx_messageInfo_MultiUsers.Size(m)
}
func (m *MultiUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiUsers.DiscardUnknown(m)
}

var xxx_messageInfo_MultiUsers proto.InternalMessageInfo

func (m *MultiUsers) GetUserInfo() []*User {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type Uid struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Uid) Reset()         { *m = Uid{} }
func (m *Uid) String() string { return proto.CompactTextString(m) }
func (*Uid) ProtoMessage()    {}
func (*Uid) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *Uid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Uid.Unmarshal(m, b)
}
func (m *Uid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Uid.Marshal(b, m, deterministic)
}
func (m *Uid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Uid.Merge(m, src)
}
func (m *Uid) XXX_Size() int {
	return xxx_messageInfo_Uid.Size(m)
}
func (m *Uid) XXX_DiscardUnknown() {
	xxx_messageInfo_Uid.DiscardUnknown(m)
}

var xxx_messageInfo_Uid proto.InternalMessageInfo

func (m *Uid) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type Uids struct {
	SingleUid            []*Uid   `protobuf:"bytes,1,rep,name=singleUid,proto3" json:"singleUid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Uids) Reset()         { *m = Uids{} }
func (m *Uids) String() string { return proto.CompactTextString(m) }
func (*Uids) ProtoMessage()    {}
func (*Uids) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *Uids) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Uids.Unmarshal(m, b)
}
func (m *Uids) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Uids.Marshal(b, m, deterministic)
}
func (m *Uids) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Uids.Merge(m, src)
}
func (m *Uids) XXX_Size() int {
	return xxx_messageInfo_Uids.Size(m)
}
func (m *Uids) XXX_DiscardUnknown() {
	xxx_messageInfo_Uids.DiscardUnknown(m)
}

var xxx_messageInfo_Uids proto.InternalMessageInfo

func (m *Uids) GetSingleUid() []*Uid {
	if m != nil {
		return m.SingleUid
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "userProtobuf.User")
	proto.RegisterType((*MultiUsers)(nil), "userProtobuf.MultiUsers")
	proto.RegisterType((*Uid)(nil), "userProtobuf.Uid")
	proto.RegisterType((*Uids)(nil), "userProtobuf.Uids")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4f, 0x8b, 0xd3, 0x40,
	0x14, 0xdf, 0xb4, 0xdd, 0xda, 0xbc, 0xae, 0x8b, 0x0e, 0x82, 0x43, 0x10, 0x0c, 0xc1, 0x43, 0x4e,
	0x29, 0x64, 0x0f, 0x82, 0x78, 0x50, 0x57, 0x5d, 0x72, 0xd8, 0xa5, 0x84, 0xe6, 0x03, 0xa4, 0xce,
	0x6b, 0x1c, 0x9c, 0x64, 0x42, 0x66, 0xc2, 0xe2, 0x57, 0x17, 0x0f, 0x32, 0x93, 0x26, 0x69, 0xdd,
	0x8a, 0x7b, 0x7b, 0xf3, 0xfb, 0x93, 0xf7, 0xf2, 0x7e, 0x0f, 0xa0, 0x55, 0xd8, 0x44, 0x75, 0x23,
	0xb5, 0x24, 0x17, 0xa6, 0x5e, 0x9b, 0x72, 0xdb, 0xee, 0xbc, 0xd7, 0x85, 0x94, 0x85, 0xc0, 0x55,
	0xbd, 0x07, 0x56, 0x9a, 0x97, 0xa8, 0x74, 0x5e, 0xd6, 0x9d, 0x3c, 0xf8, 0x35, 0x81, 0x59, 0xa6,
	0xb0, 0x21, 0x97, 0x30, 0x49, 0x18, 0x75, 0x7c, 0x27, 0x9c, 0xa6, 0x93, 0x84, 0x91, 0x67, 0x30,
	0xcd, 0x38, 0xa3, 0x13, 0x0b, 0x98, 0x92, 0x78, 0xb0, 0xb8, 0xe3, 0xdf, 0x7e, 0xdc, 0xe5, 0x25,
	0xd2, 0xa9, 0xef, 0x84, 0x6e, 0x3a, 0xbc, 0x0d, 0xb7, 0xce, 0x95, 0xba, 0x97, 0x0d, 0xa3, 0xb3,
	0x8e, 0xeb, 0xdf, 0xe4, 0x15, 0xb8, 0x1b, 0x14, 0x58, 0x7f, 0x97, 0x15, 0xd2, 0x73, 0x4b, 0x8e,
	0x00, 0x79, 0x01, 0xe7, 0x5f, 0xca, 0x9c, 0x0b, 0x3a, 0xb7, 0x4c, 0xf7, 0x20, 0x6f, 0xe0, 0xe9,
	0xba, 0x91, 0x3b, 0x2e, 0x30, 0x29, 0xf3, 0x02, 0x15, 0x7d, 0x62, 0xd9, 0x63, 0x90, 0x04, 0x70,
	0xf1, 0x55, 0x0a, 0x21, 0xef, 0xd5, 0xb5, 0x6c, 0x2b, 0x4d, 0x17, 0x76, 0xd8, 0x23, 0xcc, 0x6a,
	0x1a, 0x8e, 0x15, 0xdb, 0x6b, 0xdc, 0xbd, 0xe6, 0x00, 0x23, 0xef, 0x00, 0xae, 0x1b, 0xcc, 0x35,
	0x6e, 0x78, 0x89, 0x14, 0x7c, 0x27, 0x5c, 0xc6, 0x5e, 0xd4, 0xad, 0x2e, 0xea, 0x57, 0x17, 0x6d,
	0xfa, 0xd5, 0xa5, 0x07, 0x6a, 0xe3, 0xcd, 0x6a, 0xd6, 0x7b, 0x97, 0xff, 0xf7, 0x8e, 0xea, 0xe0,
	0x3d, 0xc0, 0x6d, 0x2b, 0x34, 0x37, 0x01, 0x28, 0x12, 0xc1, 0xc2, 0x14, 0x49, 0xb5, 0x93, 0xd4,
	0xf1, 0xa7, 0xe1, 0x32, 0x26, 0xd1, 0x61, 0x98, 0x91, 0x61, 0xd3, 0x41, 0x13, 0xbc, 0xb4, 0x09,
	0xf5, 0x41, 0x39, 0x43, 0x50, 0xc1, 0x5b, 0x98, 0x65, 0x9c, 0x29, 0xb2, 0x02, 0x57, 0xf1, 0xaa,
	0x10, 0xd8, 0xf1, 0xe6, 0x8b, 0xcf, 0xff, 0xfa, 0x22, 0x67, 0xe9, 0xa8, 0x89, 0x7f, 0x3b, 0xe0,
	0xde, 0x6e, 0x85, 0x2c, 0xec, 0x45, 0xc4, 0x30, 0xef, 0xfe, 0x93, 0x9c, 0x98, 0xc3, 0x3b, 0x81,
	0x05, 0x67, 0xe4, 0x0a, 0x16, 0x37, 0xa8, 0x3f, 0xfd, 0x34, 0x83, 0x3d, 0xec, 0xf5, 0x0f, 0xd3,
	0x67, 0xa0, 0xd6, 0x64, 0xae, 0xa9, 0xca, 0x4b, 0xfc, 0x58, 0xb1, 0xe1, 0x78, 0x1e, 0xdf, 0xfa,
	0x03, 0x5c, 0xde, 0xa0, 0xb6, 0xfb, 0xb4, 0xfd, 0xd5, 0x03, 0x2f, 0x67, 0xca, 0xa3, 0xc7, 0xd8,
	0xb8, 0xfe, 0xe0, 0x6c, 0x3b, 0xb7, 0x71, 0x5d, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x61, 0x6b,
	0xb0, 0xb4, 0x4f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MblogUserClient is the client API for MblogUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MblogUserClient interface {
	Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	GetByUid(ctx context.Context, in *Uid, opts ...grpc.CallOption) (*User, error)
	GetByNicknameAndPassword(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	GetMultiByUids(ctx context.Context, in *Uids, opts ...grpc.CallOption) (*MultiUsers, error)
}

type mblogUserClient struct {
	cc *grpc.ClientConn
}

func NewMblogUserClient(cc *grpc.ClientConn) MblogUserClient {
	return &mblogUserClient{cc}
}

func (c *mblogUserClient) Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userProtobuf.MblogUser/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mblogUserClient) GetByUid(ctx context.Context, in *Uid, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userProtobuf.MblogUser/GetByUid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mblogUserClient) GetByNicknameAndPassword(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userProtobuf.MblogUser/GetByNicknameAndPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mblogUserClient) GetMultiByUids(ctx context.Context, in *Uids, opts ...grpc.CallOption) (*MultiUsers, error) {
	out := new(MultiUsers)
	err := c.cc.Invoke(ctx, "/userProtobuf.MblogUser/GetMultiByUids", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MblogUserServer is the server API for MblogUser service.
type MblogUserServer interface {
	Create(context.Context, *User) (*User, error)
	GetByUid(context.Context, *Uid) (*User, error)
	GetByNicknameAndPassword(context.Context, *User) (*User, error)
	GetMultiByUids(context.Context, *Uids) (*MultiUsers, error)
}

func RegisterMblogUserServer(s *grpc.Server, srv MblogUserServer) {
	s.RegisterService(&_MblogUser_serviceDesc, srv)
}

func _MblogUser_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MblogUserServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userProtobuf.MblogUser/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MblogUserServer).Create(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _MblogUser_GetByUid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Uid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MblogUserServer).GetByUid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userProtobuf.MblogUser/GetByUid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MblogUserServer).GetByUid(ctx, req.(*Uid))
	}
	return interceptor(ctx, in, info, handler)
}

func _MblogUser_GetByNicknameAndPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MblogUserServer).GetByNicknameAndPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userProtobuf.MblogUser/GetByNicknameAndPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MblogUserServer).GetByNicknameAndPassword(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _MblogUser_GetMultiByUids_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Uids)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MblogUserServer).GetMultiByUids(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userProtobuf.MblogUser/GetMultiByUids",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MblogUserServer).GetMultiByUids(ctx, req.(*Uids))
	}
	return interceptor(ctx, in, info, handler)
}

var _MblogUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userProtobuf.MblogUser",
	HandlerType: (*MblogUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _MblogUser_Create_Handler,
		},
		{
			MethodName: "GetByUid",
			Handler:    _MblogUser_GetByUid_Handler,
		},
		{
			MethodName: "GetByNicknameAndPassword",
			Handler:    _MblogUser_GetByNicknameAndPassword_Handler,
		},
		{
			MethodName: "GetMultiByUids",
			Handler:    _MblogUser_GetMultiByUids_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
